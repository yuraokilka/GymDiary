@model GymDiary.WebUI.ViewModels.WorkoutViewModel
@using GymDiary.WebUI.Extensions
@{
    ViewBag.Title = "Edit workout";
}
<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm("Edit", "Workouts", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.WorkoutDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.WorkoutDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WorkoutDate, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            <input type="text" placeholder="Number of sets" id="numOfSets" class="form-control input" />
        </div>

        <div class="col-md-4">
            <div class="col-md-5" style="padding-left: 0;">
                <input type="button" value="Add exercise" id="addExercise" class="btn btn-default" />
            </div>
            <div class="col-md-5" style="padding-left: 0;">
                <input type="button" value="Delete exercise" id="delExercise" class="btn btn-default" />
            </div>
        </div>
    </div>
    <hr />

    <div id="exercisesList">
        @Html.EditorForMany(model => model.Exercises, model => model.Index)
    </div>

    <div class="form-group">
        <div class="col-md-4 col-md-offset-2">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10 col-md-offset-2">
            <p class="text-danger" style="margin-bottom: 0;">@ViewBag.Status</p>
        </div>
    </div>
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script>
    // get data and append to elemId
    function getData(elemId, url) {
        $.get(url, function (data) {
            $(elemId).append(data);
        });
    }
    // append new form for adding exercise to elemId after clicking on button
    function addForm(buttonId, elemId, numOfSetsId, urlGet) {
        $(document).on("click", buttonId, function () {
            var url = urlGet + "/" + $(numOfSetsId).val();
            getData(elemId, url);
        });
    }
    // remove last form for adding exercise from elemId after clicking on button
    function delForm(buttonId, elemId) {
        $(document).on("click", buttonId, function () {
            $(elemId).children("input:hidden").last().remove();
            $(elemId).children("input:hidden").last().remove();
            $(elemId + " .exerciseItem").last().remove();
        });
    }
    // page loaded
    $(document).ready(function () {
        // bind buttons' handlers
        addForm(
            "#addExercise",
            "#exercisesList",
            "#numOfSets",
            "@Url.Action("AddExerciseEdit")"
            );
        delForm(
            "#delExercise",
            "#exercisesList"
            );
    });
</script>